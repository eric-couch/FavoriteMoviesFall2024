@using FavoriteMoviesFall2024.Shared;

@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
@if (User is not null)
{
    <p>list of IMDBIds for your favorite movies:</p>
        <div class="containter">
        @foreach (var movie in MovieDetails)
            {
                <div class="row gy-3">
                    <div class="card h-100 border rounded bg-white">
                    <img class="card-img-top" src="@($"https://img.omdbapi.com/?{OMDBAPIKey}&i={movie.imdbID}")" style="width:100px" />
                        <div class="card-body">
                            @movie.Title (@movie.Year)
                            <h6>Actors</h6>
                            <ul class="list-group list-group-flush">
                        @foreach (var actor in movie.Actors.Split(", "))
                        {
                            <li class="list-group-item">@actor</li>
                        }
                        </ul>
                    </div>
                    

                </div>
                </div>
            }
    </div>
}


@code {
    [Inject]
    public HttpClient httpClient { get; set; } = new();
    public UserDto User { get; set; } = new();
    public List<OMDBMovie> MovieDetails { get; set; } = new();

    private readonly string OMDBAPIUrl = "https://www.omdbapi.com/?";
    private readonly string OMDBAPIKey = "apikey=86c39163";

    protected override async Task OnInitializedAsync()
    {
        User = await httpClient.GetFromJsonAsync<UserDto>("api/User");

        if (User?.FavoriteMovies?.Any() ?? false)
        {
            foreach (var movie in User.FavoriteMovies)
            {
                OMDBMovie omdbMovie = await httpClient.GetFromJsonAsync<OMDBMovie>($"{OMDBAPIUrl}{OMDBAPIKey}&i={movie.imdbId}");
                if (omdbMovie is not null)
                {
                    MovieDetails.Add(omdbMovie);
                }
            }
        }
        
    }
}