@page "/search"
@using FavoriteMoviesFall2024.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations

<label>Search</label>


<div class="container-fluid mb-5">
    <div class="row">
        <div class="col-3">
            <input type="text" class="form-control" @bind="searchTerm" placeholder="Search" />
        </div>
        <div class="col-1">
            <button class="btn btn-primary" @onclick="SearchOMDB">Search</button>
        </div>
    </div>
</div>

@if (searchResults?.Search?.Any() ?? false)
{
    <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <SfGrid DataSource="OMDBMovies"
                            TValue="MovieSearchResultItem"
                            Toolbar="@(new List<object>() { new ItemModel() { Text="Add Movie", PrefixIcon="e-add", Id="GridMovieAdd"}})">
                        <GridEvents TValue="MovieSearchResultItem"
                                    OnToolbarClick="ToolbarClickHandler"
                                    RowSelected="GetSelectedRows">
                        </GridEvents>
                        <GridColumns>
                            <GridColumn Field="Title"></GridColumn>
                            <GridColumn Field="Year"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
    </div>
}

@code {
    [Inject]
    public HttpClient httpClient { get; set; } = new();
    [Inject]
    public AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    private MovieSearchResult searchResults { get; set; } = new();
    private string searchTerm;
    private MovieSearchResultItem SelectedMovie;

    private List<MovieSearchResultItem> OMDBMovies { get; set; } = new();

    private readonly string OMDBAPIUrl = "https://www.omdbapi.com/?";
    private readonly string OMDBAPIKey = "apikey=86c39163";

    public async Task GetSelectedRows(RowSelectEventArgs<MovieSearchResultItem> args)
    {
        SelectedMovie = args.Data;
    }

    public async Task ToolbarClickHandler(ClickEventArgs args)
    {
        if (args.Item.Id == "GridMovieAdd")
        {
            Movie newMovie = new Movie
                {
                    imdbId = SelectedMovie.imdbID
                };

            var UserAuth = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity;
            var res = await httpClient.PostAsJsonAsync($"api/add-movie?username={UserAuth.Name}", newMovie);
        }
    }

    private async Task SearchOMDB()
    {
        searchResults = await httpClient.GetFromJsonAsync<MovieSearchResult>($"{OMDBAPIUrl}{OMDBAPIKey}&s={searchTerm}");
        if (searchResults?.Search?.Any() ?? false)
        {
            OMDBMovies = searchResults.Search.ToList();
        }
    }
}
